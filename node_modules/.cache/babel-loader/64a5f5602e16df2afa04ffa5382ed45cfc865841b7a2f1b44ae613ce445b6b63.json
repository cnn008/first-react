{"ast":null,"code":"var _jsxFileName = \"C:\\\\tic-tac-toe\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\n\n// Board Component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Board({\n  squares,\n  onPlay\n}) {\n  function handleClick(i) {\n    // Prevent overwriting or making moves if there's a winner\n    if (squares[i] || calculateWinner(squares)) return;\n\n    // Create a new copy of squares and update the clicked square\n    const nextSquares = squares.slice();\n    nextSquares[i] = squares.filter(square => square !== null).length % 2 === 0 ? \"X\" : \"O\";\n    onPlay(nextSquares);\n  }\n  function renderSquare(i) {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"square\",\n      onClick: () => handleClick(i),\n      children: squares[i]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [renderSquare(0), renderSquare(1), renderSquare(2)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [renderSquare(3), renderSquare(4), renderSquare(5)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [renderSquare(6), renderSquare(7), renderSquare(8)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n// Game Component\n_c = Board;\nexport default function Game() {\n  _s();\n  const [history, setHistory] = useState([Array(9).fill(null)]);\n  const [currentMove, setCurrentMove] = useState(0);\n  const currentSquares = history[currentMove];\n  const xIsNext = currentMove % 2 === 0;\n  function handlePlay(nextSquares) {\n    // Update history to include new move\n    const nextHistory = [...history.slice(0, currentMove + 1), nextSquares];\n    setHistory(nextHistory);\n    setCurrentMove(nextHistory.length - 1);\n  }\n  function jumpTo(move) {\n    // Jump to a specific move in the history\n    setCurrentMove(move);\n  }\n  const moves = history.map((squares, move) => {\n    const description = move ? `Go to move #${move}` : \"Go to game start\";\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => jumpTo(move),\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, move, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this);\n  });\n  const winner = calculateWinner(currentSquares);\n  const status = winner ? `Winner: ${winner}` : `Next player: ${xIsNext ? \"X\" : \"O\"}`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      children: /*#__PURE__*/_jsxDEV(Board, {\n        squares: currentSquares,\n        onPlay: handlePlay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: moves\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n\n// Helper function to determine the winner\n_s(Game, \"xZZdy1/aP1agxyjHn6CL01lXnXc=\");\n_c2 = Game;\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\nvar _c, _c2;\n$RefreshReg$(_c, \"Board\");\n$RefreshReg$(_c2, \"Game\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Board","squares","onPlay","handleClick","i","calculateWinner","nextSquares","slice","filter","square","length","renderSquare","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Game","_s","history","setHistory","Array","fill","currentMove","setCurrentMove","currentSquares","xIsNext","handlePlay","nextHistory","jumpTo","move","moves","map","description","winner","status","_c2","lines","a","b","c","$RefreshReg$"],"sources":["C:/tic-tac-toe/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\n\n// Board Component\nfunction Board({ squares, onPlay }) {\n  function handleClick(i) {\n    // Prevent overwriting or making moves if there's a winner\n    if (squares[i] || calculateWinner(squares)) return;\n\n    // Create a new copy of squares and update the clicked square\n    const nextSquares = squares.slice();\n    nextSquares[i] = squares.filter((square) => square !== null).length % 2 === 0 ? \"X\" : \"O\";\n\n    onPlay(nextSquares);\n  }\n\n  function renderSquare(i) {\n    return (\n      <button className=\"square\" onClick={() => handleClick(i)}>\n        {squares[i]}\n      </button>\n    );\n  }\n\n  return (\n    <div>\n      <div className=\"board-row\">\n        {renderSquare(0)}\n        {renderSquare(1)}\n        {renderSquare(2)}\n      </div>\n      <div className=\"board-row\">\n        {renderSquare(3)}\n        {renderSquare(4)}\n        {renderSquare(5)}\n      </div>\n      <div className=\"board-row\">\n        {renderSquare(6)}\n        {renderSquare(7)}\n        {renderSquare(8)}\n      </div>\n    </div>\n  );\n}\n\n// Game Component\nexport default function Game() {\n  const [history, setHistory] = useState([Array(9).fill(null)]);\n  const [currentMove, setCurrentMove] = useState(0);\n\n  const currentSquares = history[currentMove];\n  const xIsNext = currentMove % 2 === 0;\n\n  function handlePlay(nextSquares) {\n    // Update history to include new move\n    const nextHistory = [...history.slice(0, currentMove + 1), nextSquares];\n    setHistory(nextHistory);\n    setCurrentMove(nextHistory.length - 1);\n  }\n\n  function jumpTo(move) {\n    // Jump to a specific move in the history\n    setCurrentMove(move);\n  }\n\n  const moves = history.map((squares, move) => {\n    const description = move ? `Go to move #${move}` : \"Go to game start\";\n    return (\n      <li key={move}>\n        <button onClick={() => jumpTo(move)}>{description}</button>\n      </li>\n    );\n  });\n\n  const winner = calculateWinner(currentSquares);\n  const status = winner\n    ? `Winner: ${winner}`\n    : `Next player: ${xIsNext ? \"X\" : \"O\"}`;\n\n  return (\n    <div className=\"game\">\n      <div className=\"game-board\">\n        <Board squares={currentSquares} onPlay={handlePlay} />\n      </div>\n      <div className=\"game-info\">\n        <div>{status}</div>\n        <ol>{moves}</ol>\n      </div>\n    </div>\n  );\n}\n\n// Helper function to determine the winner\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}